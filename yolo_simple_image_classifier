from tkinter import Tk
from tkinter.filedialog import askopenfilename
import torch
import cv2

Tk().withdraw()  # Prevents the Tk window from appearing
image_path = askopenfilename(title="Select an Image")  # Opens a dialog box to select an image

# Load YOLOv5 model
model = torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained=True)

# Load the image
image = cv2.imread(image_path)

# Convert BGR (OpenCV format) to RGB (YOLO format)
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Perform inference
results = model(image_rgb)

# Results contain predictions and other details
results.print()  # Print results to the console

# Draw bounding boxes on the image
results.render()

# Assuming results.render() modifies images in place, display the first image
if len(results.ims) > 0:  # Adjusted based on the correct attribute
    cv2.imshow("YOLOv5 Detection", results.ims[0])  # This needs to be adjusted if the attribute name has changed
    cv2.waitKey(0)
    cv2.destroyAllWindows()
